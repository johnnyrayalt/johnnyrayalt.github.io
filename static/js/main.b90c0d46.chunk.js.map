{"version":3,"sources":["components/SideNav.tsx","components/SubNavLink.tsx","config.ts","services/AWS/AwsService.ts","assets/Constants.ts","components/IndividualProject.tsx","views/About.tsx","views/Error404.tsx","components/WebGLFont/WebGLText.jsx","views/Home.tsx","components/ProjectTile.tsx","components/ProjectGrid.tsx","utils/ParseImageTypes.ts","views/Projects.tsx","views/Views.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SideNav","props","handleChangeExpandedState","state","expanded","setState","bind","id","className","to","onClick","this","children","href","rel","target","React","Component","SubNavLink","classNames","nameString","name","trim","parseClassNames","link","parent","child","charAt","toUpperCase","substring","toLowerCase","creds","BUCKET_NAME","REGION","IDENTITY_POOL_ID","API_VERSION","AWSService","awsConfig","s3","bucketName","identityPoolId","region","apiVersion","imageUrlMaps","getImageUrlMaps","getImagesFromS3","params","Bucket","imageUrls","getKeys","listObjectsV2","err","data","Error","message","Contents","forEach","image","undefined","Key","length","url","urlMapping","push","IsTruncated","ContinuationToken","AWS","credentials","IdentityPoolId","Constants","projects","art","alpha_decay","key","root","year","description","optimized_living_spaces","web","borrow_fix","loan_up","lend_jet","IndividualProject","imageList","useParams","projectInfo","type","imagesList","includes","newImage","replace","sort","a","b","parseInt","map","src","alt","About","Error404","fontJSON","require","vAlign","hAlign","size","color","font","THREE","config","useMemo","height","curveSegments","mesh","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","attach","args","Home","camera","intensity","fallback","ProjectTile","projectDetails","backgroundImage","names","match","pop","slice","style","ProjectGrid","projectsList","project","uuidv1","ParseImageTypes","parseRootType","images","parsedImages","parse","letter","parseProjectsForGrid","getImagePreviewItems","Projects","projectGrid","Views","exact","path","activeClassName","component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b90c0d46.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ISideNavState } from '../interfaces/ISideNavState';\nimport './SideNavStyles.scss';\n\n/**\n * test\n */\nclass SideNav extends React.Component<{}, ISideNavState> {\n\tconstructor(props: Readonly<{}>) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\texpanded: false,\n\t\t};\n\n\t\tthis.handleChangeExpandedState = this.handleChangeExpandedState.bind(this);\n\t}\n\n\thandleChangeExpandedState = () => {\n\t\tif (!this.state.expanded) {\n\t\t\tthis.setState({ expanded: true });\n\t\t} else {\n\t\t\tthis.setState({ expanded: false });\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"side-nav-container\">\n\t\t\t\t<div className=\"name-container\">\n\t\t\t\t\t<NavLink className=\"link\" to=\"/\">\n\t\t\t\t\t\tJohnny Ray Alt\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"link-container\">\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<ul className=\"side-nav-ul\">\n\t\t\t\t\t\t\t<li className=\"side-nav-li\">\n\t\t\t\t\t\t\t\t<button onClick={this.handleChangeExpandedState} className=\"link btn\">\n\t\t\t\t\t\t\t\t\tProjects\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{this.state.expanded && this.props.children}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"side-nav-li\">\n\t\t\t\t\t\t\t\t<NavLink className=\"link\" to=\"/about\">\n\t\t\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"side-nav-li\">\n\t\t\t\t\t\t\t\t<a className=\"link\" href=\"https://github.com/johnnyrayalt\" rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t&#x02197; Github\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className=\"side-nav-li\">\n\t\t\t\t\t\t\t\t<a className=\"link\" href=\"mailto:johnnyrayalt@gmail.com\">\n\t\t\t\t\t\t\t\t\t&#x02197; Contact\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SideNav;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ILink } from '../interfaces/ILink';\n\nconst SubNavLink = (props: { link: ILink; classNames: string[] }): JSX.Element => {\n\tconst parseClassNames = (classNames: string[]): string => {\n\t\tif (!classNames) {\n\t\t\treturn 'sub-nav-link';\n\t\t}\n\n\t\tlet nameString: string = '';\n\n\t\tfor (let name of classNames) {\n\t\t\tnameString += `${name} `;\n\t\t}\n\n\t\treturn nameString.trim();\n\t};\n\n\tconst parseDisplayString = (): string => {\n\t\tconst firstChar: string = props.link.child.charAt(0).toUpperCase();\n\t\tconst subString: string = props.link.child.substring(1).toLowerCase();\n\n\t\treturn firstChar + subString;\n\t};\n\n\treturn (\n\t\t<NavLink className={parseClassNames(props.classNames)} to={`/${props.link.parent}/${props.link.child}`}>\n\t\t\t{'↳' + parseDisplayString()}\n\t\t</NavLink>\n\t);\n};\n\nexport default SubNavLink;\n","export const creds = {\n\tBUCKET_NAME: 'personal-portfolio-images',\n\tREGION: 'us-west-2',\n\tIDENTITY_POOL_ID: 'us-west-2:584cc92b-504d-4ee0-85b1-efdeb66f5f2a',\n\tAPI_VERSION: '2006-03-01',\n};\n","import * as AWS from 'aws-sdk';\nimport { IAWSConfig } from '../../interfaces/IAWSConfig';\nimport { IImageUrlMapping } from '../../interfaces/IImageUrlMapping';\n\nexport class AWSService {\n\tprivate s3: AWS.S3;\n\n\tprivate readonly bucketName: string;\n\tprivate readonly identityPoolId: string;\n\tprivate readonly region: string;\n\tprivate readonly apiVersion: string;\n\n\tprivate imageUrlMaps: IImageUrlMapping[] = [];\n\n\tconstructor(awsConfig: IAWSConfig) {\n\t\tthis.bucketName = awsConfig.BUCKET_NAME;\n\t\tthis.identityPoolId = awsConfig.IDENTITY_POOL_ID;\n\t\tthis.region = awsConfig.REGION;\n\t\tthis.apiVersion = awsConfig.API_VERSION;\n\n\t\tAWS.config.region = this.region;\n\t\tAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n\t\t\tIdentityPoolId: this.identityPoolId,\n\t\t});\n\t\tthis.s3 = new AWS.S3({\n\t\t\tapiVersion: this.apiVersion,\n\t\t\tparams: { Bucket: this.bucketName },\n\t\t});\n\t\tthis.getImagesFromS3(this.s3);\n\t}\n\n\tpublic getImageUrlMaps = (): IImageUrlMapping[] => {\n\t\treturn this.imageUrlMaps;\n\t};\n\n\tprivate getImagesFromS3 = (s3: AWS.S3): void => {\n\t\tconst params: AWS.S3.ListObjectsV2Request = {\n\t\t\tBucket: this.bucketName,\n\t\t};\n\n\t\tconst imageUrls: IImageUrlMapping[] = [];\n\t\tconst getKeys = (): AWS.Request<AWS.S3.ListObjectsV2Output, AWS.AWSError> => {\n\t\t\treturn s3.listObjectsV2(params, (err: AWS.AWSError, data: AWS.S3.ListObjectsV2Output): void => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthrow new Error(`Error getting keys from AWS: ${err.message}`);\n\t\t\t\t} else {\n\t\t\t\t\tdata.Contents?.forEach((image: AWS.S3.Object): void => {\n\t\t\t\t\t\tif (image.Key === undefined || image.Key.charAt(image.Key.length - 1) === '/') return;\n\n\t\t\t\t\t\tconst url = `https://${this.bucketName}.s3-${this.region}.amazonaws.com/${image.Key}`;\n\t\t\t\t\t\tconst urlMapping: IImageUrlMapping = {\n\t\t\t\t\t\t\tid: image.Key,\n\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t};\n\t\t\t\t\t\timageUrls.push(urlMapping);\n\n\t\t\t\t\t\tif (data.IsTruncated) {\n\t\t\t\t\t\t\tparams.ContinuationToken = data.ContinuationToken;\n\t\t\t\t\t\t\tgetKeys();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tgetKeys();\n\t\tthis.imageUrlMaps = imageUrls;\n\t};\n}\n","export interface ConstantsSchema {\n\tprojects: {\n\t\t[root: string]: {\n\t\t\t[key: string]: IProjectDetails;\n\t\t};\n\t};\n}\n\nexport interface IProjectDetails {\n\tkey: string;\n\troot: string;\n\tname: string;\n\tyear: string;\n\tlink?: string;\n\tdescription: () => {};\n}\n\nexport const Constants: ConstantsSchema = {\n\tprojects: {\n\t\tart: {\n\t\t\talpha_decay: {\n\t\t\t\tkey: 'alpha_decay',\n\t\t\t\troot: 'art',\n\t\t\t\tname: 'Alpha Decay',\n\t\t\t\tyear: '2013',\n\t\t\t\tdescription: (): string => {\n\t\t\t\t\tconst string = `Alpha Decay was an installation for my senior thesis at Pacific Northwest College of Art.\n\nThe complete work contains five discrete sculptures comprised of both readymade and frabricated objects, found objects, a video loop, and four framed poems printed on pearlescent archival paper.`;\n\t\t\t\t\treturn string;\n\t\t\t\t},\n\t\t\t},\n\t\t\toptimized_living_spaces: {\n\t\t\t\tkey: 'optimized_living_spaces',\n\t\t\t\troot: 'art',\n\t\t\t\tname: 'Optimized Living Spaces #1',\n\t\t\t\tyear: '2012',\n\t\t\t\tdescription: () => {\n\t\t\t\t\treturn `Acrylic paint, screen print, and graphite on BFK Rives paper.`;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tweb: {\n\t\t\tborrow_fix: {\n\t\t\t\tkey: 'borrow_fix',\n\t\t\t\troot: 'web',\n\t\t\t\tname: 'Borrow Fix',\n\t\t\t\tyear: '2019',\n\t\t\t\tlink: 'https://trendcapital.com/',\n\t\t\t\tdescription: () => {\n\t\t\t\t\treturn `Website for Trend Capital Holdings, LLC.\n\nWhat I did:\n+ Component development in React\n+ API development using Node.js and Express`;\n\t\t\t\t},\n\t\t\t},\n\t\t\tloan_up: {\n\t\t\t\tkey: 'loan_up',\n\t\t\t\troot: 'web',\n\t\t\t\tname: 'Loan Up',\n\t\t\t\tyear: '2019',\n\t\t\t\tlink: 'https://trendcapital.com/',\n\t\t\t\tdescription: () => {\n\t\t\t\t\treturn `Website for Trend Capital Holdings, LLC.\n\nWhat I did:\n+ Component development in React\n+ API development using Node.js and Express`;\n\t\t\t\t},\n\t\t\t},\n\t\t\tlend_jet: {\n\t\t\t\tkey: 'lend_jet',\n\t\t\t\troot: 'web',\n\t\t\t\tname: 'Lend Jet',\n\t\t\t\tyear: '2019',\n\t\t\t\tlink: 'https://trendcapital.com/',\n\t\t\t\tdescription: () => {\n\t\t\t\t\treturn `Website for Trend Capital Holdings, LLC.\n\nWhat I did:\n+ Component development in React\n+ API development using Node.js and Express`;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Constants } from '../assets/Constants';\nimport { IImageUrlMapping } from '../interfaces/IImageUrlMapping';\nimport { Group } from '../types/GroupType';\nimport './IndividualProjectStyles.scss';\n\ninterface RouteInfo {\n\tkey: string;\n}\n\nconst IndividualProject = (props: { imagesList: IImageUrlMapping[]; type: Group }): JSX.Element => {\n\tconst imageList: IImageUrlMapping[] = [];\n\tconst params = useParams<RouteInfo>();\n\tconst projectInfo = Constants.projects[props.type][params.key];\n\n\t(() =>\n\t\tprops.imagesList.forEach((image: IImageUrlMapping) => {\n\t\t\tif (image.id.includes(params.key)) {\n\t\t\t\tconst getIndex = image.id.replace(/\\D/g, '');\n\t\t\t\tlet newImage: IImageUrlMapping = {\n\t\t\t\t\tid: getIndex,\n\t\t\t\t\turl: image.url,\n\t\t\t\t};\n\n\t\t\t\tif (projectInfo.link === undefined) {\n\t\t\t\t\tnewImage.link = image.url;\n\t\t\t\t} else {\n\t\t\t\t\tnewImage.link = projectInfo.link;\n\t\t\t\t}\n\n\t\t\t\timageList.push(newImage);\n\t\t\t}\n\t\t\timageList.sort((a, b) => {\n\t\t\t\treturn parseInt(a.id) - parseInt(b.id);\n\t\t\t});\n\t\t}))();\n\n\treturn (\n\t\t<div className=\"individual-project-container\">\n\t\t\t<div className=\"individual-project-info-container\">\n\t\t\t\t<p className=\"individual-project-info-text text individual-project-info-name\">{projectInfo.name}</p>\n\t\t\t\t<p className=\"individual-project-info-text text individual-project-info-description\">\n\t\t\t\t\t{projectInfo.description()}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"individual-project-info-text text individual-project-info-year\">{projectInfo.year}</p>\n\t\t\t</div>\n\t\t\t<div className=\"individual-project-image-list\">\n\t\t\t\t<ul className=\"individual-project-image-ul\">\n\t\t\t\t\t{imageList.map((image: IImageUrlMapping) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"individual-project-image-li\" key={image.id}>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"individual-project-image-link link\"\n\t\t\t\t\t\t\t\t\thref={image.link}\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img src={image.url} className=\"individual-project-image\" alt={`${image.id}`} />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default IndividualProject;\n","import React from 'react';\nimport './AboutStyles.scss';\n\nconst About: React.FC = (): JSX.Element => {\n\treturn (\n\t\t<div className=\"about-text-container\">\n\t\t\t<div className=\"text\">\n\t\t\t\t<span className=\"unicode\">&#x261E;</span> b. 1991 Los Angeles, California\n\t\t\t</div>\n\t\t\t<div className=\"text\">\n\t\t\t\t<span className=\"unicode\">&#x263B;</span> Currently lives and works in Portland, Oregon\n\t\t\t</div>\n\t\t\t<div className=\"text\">\n\t\t\t\t<span className=\"unicode\">&#x2668;</span> Software Engineer\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React from 'react';\n\nconst Error404 = () => {\n\treturn <h1>404 Not Found</h1>;\n};\n\nexport default Error404;\n","import * as THREE from 'three';\nimport React, { useMemo } from 'react';\nimport { useUpdate } from 'react-three-fiber';\nconst fontJSON = require('../../assets/fonts/lato_black.typeface.json');\n\nexport default function({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#000000', ...props }) {\n\tconst font = new THREE.Font(fontJSON);\n\tconst config = useMemo(\n\t\t() => ({\n\t\t\tfont,\n\t\t\tsize: 40,\n\t\t\theight: 30,\n\t\t\tcurveSegments: 32,\n\t\t}),\n\t\t[font],\n\t);\n\tconst mesh = useUpdate(\n\t\tself => {\n\t\t\tconst size = new THREE.Vector3();\n\t\t\tself.geometry.computeBoundingBox();\n\t\t\tself.geometry.boundingBox.getSize(size);\n\t\t\tself.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x;\n\t\t\tself.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y;\n\t\t},\n\t\t[children],\n\t);\n\treturn (\n\t\t<group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n\t\t\t<mesh ref={mesh}>\n\t\t\t\t<textGeometry attach=\"geometry\" args={[children, config]} />\n\t\t\t\t<meshNormalMaterial attach=\"material\" />\n\t\t\t</mesh>\n\t\t</group>\n\t);\n}\n","import React, { Suspense } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport WebGlText from '../components/WebGLFont/WebGLText';\nimport './Home.scss';\n\nclass Home extends React.Component<{}, {}> {\n\trender() {\n\t\treturn (\n\t\t\t<Canvas camera={{ position: [0, 0, 20] }}>\n\t\t\t\t<ambientLight intensity={2} />\n\t\t\t\t<pointLight position={[40, 40, 40]} />\n\t\t\t\t<Suspense fallback={null}>\n\t\t\t\t\t<WebGlText children=\"WELCOME\" position={[15, 0, 0]} hAlign=\"left\" />\n\t\t\t\t\t<WebGlText children=\"Under Construction\" position={[27, -10, -10]} hAlign=\"left\" />\n\t\t\t\t</Suspense>\n\t\t\t</Canvas>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Constants, IProjectDetails } from '../assets/Constants';\nimport { IProjectTile } from '../interfaces/IProjectTile';\nimport './ProjectTileStyles.scss';\n\nconst ProjectTile = (props: IProjectTile): JSX.Element => {\n\tlet projectDetails: IProjectDetails;\n\n\tconst backgroundImage = {\n\t\tbackgroundImage: `url(${props.image})`,\n\t};\n\n\t((name: string): IProjectDetails => {\n\t\tconst regex: RegExp = /\\b([^/]*\\/)/gi;\n\t\tconst names: RegExpMatchArray | null = name.match(regex);\n\n\t\tif (names === null) {\n\t\t\tthrow new Error(\n\t\t\t\t`String does not meet regex requirements: ${name}.\n                Please format as such: root/projectFolder/index.ext`,\n\t\t\t);\n\t\t}\n\n\t\tconst key: string | undefined = names.pop()?.slice(0, -1);\n\t\tif (key === undefined) {\n\t\t\tthrow new Error(`Name formatter returned undefined for name: ${name}`);\n\t\t} else {\n\t\t\tprojectDetails = Constants.projects[props.type][key];\n\t\t\treturn projectDetails;\n\t\t}\n\t})(props.name);\n\n\treturn (\n\t\t<div className=\"project-tile-container\">\n\t\t\t<div className=\"project-tile-image\" style={backgroundImage} />\n\t\t\t<div className=\"project-tile-text-container\">\n\t\t\t\t<Link className=\"project-tile-link\" to={`/projects/${projectDetails.root}/${projectDetails.key}`}>\n\t\t\t\t\t<p className=\"project-tile-text\">{projectDetails.name}</p>\n\t\t\t\t\t<div className=\"project-tile-text\">{projectDetails.year}</div>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ProjectTile;\n","import React from 'react';\nimport uuidv1 from 'uuid';\nimport { IProjectGrid } from '../interfaces/IProjectGrid';\nimport { IProjectTile } from '../interfaces/IProjectTile';\nimport './ProjectGridStyles.scss';\nimport ProjectTile from './ProjectTile';\n\nconst ProjectGrid = (props: IProjectGrid): JSX.Element => {\n\treturn (\n\t\t<div className=\"project-grid-container\">\n\t\t\t{props.projectsList.map(\n\t\t\t\t(project: IProjectTile): JSX.Element => (\n\t\t\t\t\t<div key={uuidv1()} className=\"project-grid-item\">\n\t\t\t\t\t\t<ProjectTile {...project} type={props.type} />\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ProjectGrid;\n","import { IImageUrlMapping } from '../interfaces/IImageUrlMapping';\nimport { IProject } from '../interfaces/IProject';\nimport { IProjectGrid } from '../interfaces/IProjectGrid';\nimport { Group } from '../types/GroupType';\n\nexport class ParseImageTypes {\n\tpublic static parseRootType = (images: IImageUrlMapping[], type: Group): IProject => {\n\t\tconst parsedImages: IImageUrlMapping[] = [];\n\t\tconst parse = (images: IImageUrlMapping[], letter: string) => {\n\t\t\timages.forEach(image => {\n\t\t\t\tif (image.id.charAt(0) === `${letter}`) {\n\t\t\t\t\tparsedImages.push(image);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tswitch (type) {\n\t\t\tcase 'art': {\n\t\t\t\tparse(images, 'a');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'web': {\n\t\t\t\tparse(images, 'w');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst result = {\n\t\t\ttype: type,\n\t\t\timagesList: parsedImages,\n\t\t};\n\n\t\treturn result;\n\t};\n\n\tpublic static parseProjectsForGrid = (props: IProject, type: Group): IProjectGrid => {\n\t\tconst getImagePreviewItems: IImageUrlMapping[] = [];\n\n\t\tprops.imagesList.forEach((image: IImageUrlMapping): void => {\n\t\t\tif (image.id.includes('/1.') || image.id.includes('/1_')) {\n\t\t\t\tgetImagePreviewItems.push(image);\n\t\t\t}\n\t\t});\n\n\t\tconst value: IProjectGrid = {\n\t\t\ttype: type,\n\t\t\tprojectsList: getImagePreviewItems.map(image => {\n\t\t\t\treturn { name: image.id, link: image.url, image: image.url, type: type };\n\t\t\t}),\n\t\t};\n\n\t\treturn value;\n\t};\n}\n","import React from 'react';\nimport ProjectGrid from '../components/ProjectGrid';\nimport { IProject } from '../interfaces/IProject';\nimport { IProjectGrid } from '../interfaces/IProjectGrid';\nimport { ParseImageTypes } from '../utils/ParseImageTypes';\n\nconst Projects = (props: IProject): JSX.Element => {\n\tconst projectGrid: IProjectGrid = ParseImageTypes.parseProjectsForGrid(\n\t\tParseImageTypes.parseRootType(props.imagesList, props.type),\n\t\tprops.type,\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<ProjectGrid {...projectGrid} />\n\t\t</div>\n\t);\n};\n\nexport default Projects;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport IndividualProject from '../components/IndividualProject';\nimport { IViewsProps } from '../interfaces/IViewsProps';\nimport About from './About';\nimport Error404 from './Error404';\nimport Home from './Home';\nimport Projects from './Projects';\n\nconst Views = (props: IViewsProps): JSX.Element => {\n\treturn (\n\t\t<>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" activeClassName=\"link\" component={Home}></Route>\n\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\tpath=\"/projects/web\"\n\t\t\t\t\tcomponent={() => <Projects type=\"web\" imagesList={props.images} />}\n\t\t\t\t></Route>\n\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tactiveClassName=\"active\"\n\t\t\t\t\tpath=\"/projects/art\"\n\t\t\t\t\tcomponent={() => <Projects type=\"art\" imagesList={props.images} />}\n\t\t\t\t></Route>\n\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`/projects/art/:key`}\n\t\t\t\t\tcomponent={() => <IndividualProject imagesList={props.images} type=\"art\" />}\n\t\t\t\t/>\n\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`/projects/web/:key`}\n\t\t\t\t\tcomponent={() => <IndividualProject imagesList={props.images} type=\"web\" />}\n\t\t\t\t/>\n\n\t\t\t\t<Route activeClassName=\"active\" path=\"/about\" component={About} />\n\n\t\t\t\t<Route component={Error404} />\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\n\nexport default Views;\n","import React from 'react';\nimport './App.scss';\nimport SideNav from './components/SideNav';\nimport SubNavLink from './components/SubNavLink';\nimport { creds } from './config';\nimport { AWSService } from './services/AWS/AwsService';\nimport Views from './views/Views';\n\nconst App = (): JSX.Element => {\n\tconst awsService: AWSService = new AWSService(creds);\n\tconst images = awsService.getImageUrlMaps();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div id=\"side-nav-wrapper\">\n\t\t\t\t<SideNav>\n\t\t\t\t\t<ul className=\"sub-nav-ul\">\n\t\t\t\t\t\t<li className=\"sub-nav-li\">\n\t\t\t\t\t\t\t<SubNavLink link={{ parent: 'projects', child: 'web' }} classNames={['link', 'sub-nav-link']} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"sub-nav-li\">\n\t\t\t\t\t\t\t<SubNavLink link={{ parent: 'projects', child: 'art' }} classNames={['link', 'sub-nav-link']} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</SideNav>\n\t\t\t</div>\n\t\t\t<div id=\"body-content-wrapper\">\n\t\t\t\t<Views images={images} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './assets/GlobalStyles.scss';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}